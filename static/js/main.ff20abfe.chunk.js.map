{"version":3,"sources":["store/reducers/weatherCardReducer.js","store/reducers/mainPageReducer.js","components/WeatherCard/WeatherCard.jsx","healper.js","components/SavedCity/SavedCity.jsx","components/MainPage/MainPage.jsx","App.js","store/reducers/rootReducer.js","store/store.js","meterialTheme.js","index.js"],"names":["defaultWeatherCardState","isFahrenheit","IS_FAHRENHEIT","favourites","JSON","parse","localStorage","getItem","error","defaultMainPageState","query","isLoading","isError","weather","QUERY","IS_LOADING","IS_ERROR","WEATHER","FAVOURITES","FETCH_WEATHER","setIsLoadingAction","payload","type","setIsErrorAction","setWeatherAction","setFavouritesAction","fetchWeather","searchValue","dispatch","trim","axios","get","process","REACT_APP_API_KEY","then","res","catch","err","WeatherCard","temp","useDispatch","useSelector","state","mainPage","weatherCard","setIsFahrenheit","setIsFahrenheitAction","cities","Math","round","data","main","useEffect","className","name","sys","country","FormControlLabel","control","Switch","label","onChange","onClick","push","filteredCities","arr","used","filter","obj","id","unique","saveCity","SavedCity","cityName","removeItem","e","stopPropagation","color","size","MainPage","newArr","city","setItem","stringify","placeholder","target","value","onKeyDown","keyCode","onKeyDownHandler","Button","variant","style","borderColor","CircularProgress","length","map","App","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","theme","createTheme","palette","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ff20abfe.chunk.js","sourcesContent":["const defaultWeatherCardState = {\r\n  isFahrenheit: false,\r\n}\r\n\r\nexport const IS_FAHRENHEIT = 'IS_FAHRENHEIT'\r\n\r\nexport const weatherCardReducer = (state = defaultWeatherCardState, action) => {\r\n  switch (action.type) {\r\n    case IS_FAHRENHEIT:\r\n      return { ...state, isFahrenheit: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setIsFahrenheitAction = (payload) => ({\r\n  type: IS_FAHRENHEIT,\r\n  payload,\r\n})\r\n","import axios from 'axios'\r\n\r\nlet favourites = []\r\n\r\ntry {\r\n  favourites = JSON.parse(localStorage.getItem('cities'))\r\n} catch (error) {\r\n  //\r\n}\r\n\r\nconst defaultMainPageState = {\r\n  query: '',\r\n  isLoading: true,\r\n  isError: false,\r\n  weather: [],\r\n  favourites: favourites,\r\n}\r\n\r\nexport const QUERY = 'QUERY'\r\nexport const IS_LOADING = 'IS_LOADING'\r\nexport const IS_ERROR = 'IS_ERROR'\r\nexport const WEATHER = 'WEATHER'\r\nexport const FAVOURITES = 'FAVOURITES'\r\nexport const FETCH_WEATHER = 'FETCH_WEATHER'\r\n\r\nexport const mainPageReducer = (state = defaultMainPageState, action) => {\r\n  switch (action.type) {\r\n    case QUERY:\r\n      return { ...state, query: action.payload }\r\n    case IS_LOADING:\r\n      return { ...state, isLoading: action.payload }\r\n    case IS_ERROR:\r\n      return { ...state, isError: action.payload }\r\n    case WEATHER:\r\n      return { ...state, weather: action.payload }\r\n    case FAVOURITES:\r\n      return { ...state, favourites: action.payload }\r\n    case FETCH_WEATHER:\r\n      return { ...state, weather: [...state.weather, action.payload] }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setQueryAction = (payload) => ({\r\n  type: QUERY,\r\n  payload,\r\n})\r\nexport const setIsLoadingAction = (payload) => ({\r\n  type: IS_LOADING,\r\n  payload,\r\n})\r\nexport const setIsErrorAction = (payload) => ({\r\n  type: IS_ERROR,\r\n  payload,\r\n})\r\nexport const setWeatherAction = (payload) => ({\r\n  type: WEATHER,\r\n  payload,\r\n})\r\nexport const setFavouritesAction = (payload) => ({\r\n  type: FAVOURITES,\r\n  payload,\r\n})\r\nexport const fetchWeatherAction = (payload) => ({\r\n  type: FETCH_WEATHER,\r\n  payload,\r\n})\r\n\r\nexport const fetchWeather = (searchValue = 'london') => {\r\n  return (dispatch) => {\r\n    if (searchValue.trim() !== '') {\r\n      dispatch(setIsLoadingAction(true))\r\n      axios\r\n        .get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\r\n        )\r\n        .then((res) => {\r\n          dispatch(setWeatherAction(res))\r\n          dispatch(setIsLoadingAction(false))\r\n          dispatch(setIsErrorAction(false))\r\n        })\r\n        .catch(function (err) {\r\n          dispatch(setIsLoadingAction(false))\r\n          dispatch(setIsErrorAction(true))\r\n        })\r\n    }\r\n  }\r\n}\r\n","import './WeatherCard.css'\r\n\r\nimport React from 'react'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport { useEffect } from 'react'\r\nimport { unique } from '../../healper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setIsFahrenheitAction } from '../../store/reducers/weatherCardReducer'\r\nimport { setFavouritesAction } from '../../store/reducers/mainPageReducer'\r\n\r\nconst WeatherCard = ({ weather, favourites }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { isError } = useSelector((state) => state.mainPage)\r\n\r\n  const { isFahrenheit } = useSelector((state) => state.weatherCard)\r\n  const setIsFahrenheit = (payload) => {\r\n    dispatch(setIsFahrenheitAction(payload))\r\n  }\r\n\r\n  let temp\r\n  let cities = [...favourites]\r\n\r\n  const handleChange = () => {\r\n    setIsFahrenheit(!isFahrenheit)\r\n  }\r\n\r\n  const calcTemp = (fahrenheit) => {\r\n    fahrenheit\r\n      ? (temp = `${Math.round((weather.data.main.temp * 9) / 5 + 32)}°F`)\r\n      : (temp = `${Math.round(weather.data.main.temp)}°C`)\r\n  }\r\n\r\n  if (!isError) {\r\n    calcTemp(isFahrenheit)\r\n  }\r\n\r\n  const saveCity = () => {\r\n    cities.push(weather.data)\r\n    let filteredCities = unique(cities)\r\n    dispatch(setFavouritesAction(filteredCities))\r\n  }\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  return (\r\n    <>\r\n      {!isError ? (\r\n        <>\r\n          <div className=\"weather__card\">\r\n            <div className=\"location\">\r\n              {weather.data.name}, {weather.data.sys.country}\r\n            </div>\r\n            <div className=\"temp\">{temp}</div>\r\n            <div className=\"weather-descr\">{weather.data.weather[0].main}</div>\r\n          </div>\r\n          <div className=\"bottom-controls\">\r\n            <FormControlLabel\r\n              control={<Switch />}\r\n              label=\"Fahrenheit\"\r\n              onChange={() => handleChange()}\r\n              className=\"city-input\"\r\n            />\r\n            <button className=\"fav-btn\" onClick={() => saveCity()}>\r\n              Add city to favourite\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h1 className=\"error-msg\">Nothing found :(</h1>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeatherCard\r\n","export const unique = (arr) => {\r\n  let used = {}\r\n  let filteredCities = arr.filter(function (obj) {\r\n    return obj.id in used ? 0 : (used[obj.id] = 1)\r\n  })\r\n  return filteredCities\r\n}\r\n","import './SavedCity.css'\r\n\r\nimport React from 'react'\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { fetchWeather } from '../../store/reducers/mainPageReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SavedCity = ({ cityName, removeItem, id }) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"saved-city\">\r\n      <button\r\n        className=\"saved-city__btn\"\r\n        onClick={(e) => {\r\n          dispatch(fetchWeather(cityName))\r\n        }}\r\n      >\r\n        <div className=\"city__name\">{cityName}</div>\r\n        <div\r\n          className=\"del-btn\"\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            removeItem(id)\r\n          }}\r\n        >\r\n          <DeleteIcon color=\"secondary\" aria-label=\"delete\" size=\"small\" />\r\n        </div>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SavedCity\r\n","import './MainPage.css'\r\n\r\nimport React from 'react'\r\nimport WeatherCard from '../WeatherCard/WeatherCard'\r\nimport SavedCity from '../SavedCity/SavedCity'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  setFavouritesAction,\r\n  setQueryAction,\r\n  fetchWeather,\r\n} from '../../store/reducers/mainPageReducer'\r\n\r\nconst MainPage = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { query, isLoading, isError, weather, favourites } = useSelector(\r\n    (state) => state.mainPage\r\n  )\r\n\r\n  const onKeyDownHandler = (e) => {\r\n    if (e.keyCode === 13) {\r\n      dispatch(fetchWeather(query))\r\n    }\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    const newArr = favourites.filter((city) => city.id !== id)\r\n    dispatch(setFavouritesAction(newArr))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchWeather())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('cities', JSON.stringify(favourites))\r\n  }, [favourites])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          typeof weather.data != 'undefined'\r\n            ? weather.data.main.temp > 16\r\n              ? 'weather-main'\r\n              : 'weather-main cold'\r\n            : 'weather-main'\r\n        }\r\n      >\r\n        <div className=\"search-box\">\r\n          <input\r\n            className=\"weater-input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter city...\"\r\n            onChange={(e) => dispatch(setQueryAction(e.target.value))}\r\n            value={query}\r\n            onKeyDown={(e) => onKeyDownHandler(e)}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            style={{ borderColor: '#fff' }}\r\n            onClick={() => dispatch(fetchWeather(query))}\r\n          >\r\n            Search\r\n          </Button>\r\n        </div>\r\n        {!isLoading ? (\r\n          <WeatherCard\r\n            weather={weather}\r\n            isLoading={isLoading}\r\n            isError={isError}\r\n            favourites={favourites}\r\n          />\r\n        ) : (\r\n          <div className=\"loader\">\r\n            <CircularProgress color=\"secondary\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"fav\">\r\n        <h1>Saved cities</h1>\r\n        <div className=\"fav-items\">\r\n          {favourites.length !== 0\r\n            ? favourites.map((city) => {\r\n              return (\r\n                <SavedCity\r\n                  key={city.id}\r\n                  id={city.id}\r\n                  cityName={city.name}\r\n                  removeItem={removeItem}\r\n                />\r\n              )\r\n            })\r\n            : 'No favorite cities'}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","import './App.css'\r\nimport MainPage from './components/MainPage/MainPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainPage />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from 'redux'\r\nimport { mainPageReducer } from './mainPageReducer'\r\nimport { weatherCardReducer } from './weatherCardReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  mainPage: mainPageReducer,\r\n  weatherCard: weatherCardReducer,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers/rootReducer'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import { createTheme } from '@material-ui/core/styles'\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    secondary: {\r\n      main: '#ffffff',\r\n    },\r\n  },\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { theme } from './meterialTheme'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}